name: Python build and test

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f ./app/app/requirements.txt ]; then pip install -r ./app/app/requirements.txt; fi
      - name: Run Tests
        run: |
          python -m pytest -v
  #start-sonarqube: #Vorerst muss die VM manuell bei azure gestartet werden, da das login f√ºr die Verwendung der CLI nicht wie bei der WebApp funktioniert.
  #  runs-on: ubuntu-latest
  #  needs: build-and-test
  #  steps:
  #    - uses: actions/checkout@v3
  #    - name: Login to Azure
  #      uses: azure/login@v1
  #      with:
  #        creds: ${{ secrets.SONARQUBE_CREDENTIALS }}
  #    - name: Start VM
  #      run: |
  #        az vm start -g Sonarqube-Server_group -n Sonarqube-Server
  use-sonarqube:
    name: Sonarqube
    needs: build-and-test #start-sonarqube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      - uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #stopp-sonarqube:
  #  runs-on: ubuntu-latest
  #  needs: use-sonarqube
  #  steps: 
  #    - uses: actions/checkout@v3
  #    - name: Login to Azure
  #      uses: azure/login@v1
  #      with:
  #        creds: ${{ secrets.SONARQUBE_CREDENTIALS }}
  #    - name: Stop VM
  #      run: |
  #        az vm stop -g Sonarqube-Server_group -n Sonarqube-Server

